# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: byoda04
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: prob-server
# "service" is the name of this project. This will also be added to your AWS resource names.
service: prob-server

stages:
  default:
    params:
      tableName: "planets-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2
  profile: default
  apiGateway:
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [PlanetsTable, Arn]
  environment:
    PLANETS_TABLE: ${param:tableName}

functions:
  api:
    handler: src/handler.handler
    events:
      - httpApi: "*"

package:
  individually: true

custom:
  scripts:
    hooks:
      'before:package:createDeploymentArtifacts': npx tsc
      'after:package:createDeploymentArtifacts': rm -rf build

resources:
  Resources:
    PlanetsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:tableName}
